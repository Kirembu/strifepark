<!DOCTYPE html>
<!-- saved from url=(0055)http://jontourage.com/2011/02/09/virtualenv-pip-basics/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

    <!-- HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <link rel="stylesheet" type="text/css" href="./Virtualenv and pip Basics   Jontourage_files/style.css">

	<title>Virtualenv and pip Basics | Jontourage</title>

<script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/document_iterator.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/find_proxy.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/get_html_text.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/global_constants.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/name_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/number_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/string_finder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/change_sink.js"></script><meta name="document_iterator.js"><meta name="find_proxy.js"><meta name="get_html_text.js"><meta name="global_constants.js"><meta name="name_injection_builder.js"><meta name="number_injection_builder.js"><meta name="string_finder.js"><meta name="change_sink.js"></head>

<body>
    <div class="topbar">
        <div class="fill">
            <div class="container">
                <ul class="nav">
                    <li><a href="http://jontourage.com/">Home</a></li>
                    <li><a href="http://jontourage.com/articles.html">Articles</a></li>
                    <li><a href="http://jontourage.com/projects.html">Projects</a></li>
                    <li class="last"><a href="http://jontourage.com/about.html">About</a></li>
                </ul>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="content">
            
<section>
    <h1><span>Virtualenv and pip Basics</span></h1>
    <div class="row">
        <div class="span12 post">
            <p>When doing any kind of Python development, one tool I find indispensable is <a href="http://pypi.python.org/pypi/virtualenv">virtualenv</a>.  Virtualenv, along with <a href="http://www.doughellmann.com/projects/virtualenvwrapper/">virtualenvwrapper</a> and <a href="http://pypi.python.org/pypi/pip">pip</a>, make for a great way to completely isolate your development environment.</p>

<p>When I first started out developing Django sites, I used to use <a href="http://packages.python.org/distribute/easy_install.html">easy_install</a> to install all packages I needed to the system-wide <code>site-packages</code> directory.  Even as a newbie to Django, I knew this wasn't good practice, but it ensured that commonly used libraries such as <code>MySQL-python</code> was available without any extra configuration with new projects.  Regardless, completely isolating your environment with virtualenv ensures that a) you don't install conflicting packages and b) any bugs introduced in your project can be traced back directly to the packages you installed.  Also, a huge benefit is that it makes installing multiple versions of Python super easy without having to create any symlinks.</p>

<h2>Getting started with Virtualenv and pip</h2>

<p>The first thing you will need to do is install pip.  If you have setuptools installed, which you most likely will with most modern platforms, you can install pip through easy_install:</p>

<pre><code>easy_install pip
</code></pre>

<p>Next, you'll need to install virtualenv with pip:</p>

<pre><code>pip install virtualenv
</code></pre>

<p>Finally, I would highly recommend installing virtualenvwrapper as it makes it much easier to create and start virtual environments:</p>

<pre><code>pip install virtualenvwrapper
</code></pre>

<p>As part of the install instructions for virtualenvwrapper, you need to add this to your .bash_profile</p>

<pre><code># virtualenv
export WORKON_HOME=$HOME/.virtualenvs
source /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh
</code></pre>

<blockquote>
  <blockquote>
    <p>*Please note that this path may differ depending on what version of Python you have.  Also, I like to keep all my virtualenvs in a directory called <code>.virtualenvs</code> in my home directory, but this may differ for you if you choose to keep your virtual environments in a different directory.</p>
  </blockquote>
</blockquote>

<p>Make sure you source your new <code>.bash_profile</code></p>

<pre><code>source ~/.bash_profile
</code></pre>

<p>...and that's it!  Now you're all set to start using virtual environments!</p>

<h2>Creating a Virtual Environment</h2>

<p>A few handy aliases I have in my <code>.bash_profile</code> are found on <a href="http://blog.doughellmann.com/2010/01/virtualenvwrapper-tips-and-tricks.html">Doug Hellmann's blog</a> and listed below:</p>

<pre><code># virtualenv aliases
# http://blog.doughellmann.com/2010/01/virtualenvwrapper-tips-and-tricks.html
alias v='workon'
alias v.deactivate='deactivate'
alias v.mk='mkvirtualenv --no-site-packages'
alias v.mk_withsitepackages='mkvirtualenv'
alias v.rm='rmvirtualenv'
alias v.switch='workon'
alias v.add2virtualenv='add2virtualenv'
alias v.cdsitepackages='cdsitepackages'
alias v.cd='cdvirtualenv'
alias v.lssitepackages='lssitepackages'
</code></pre>

<p>This saves some keystrokes, especially since I always create new virtual environments with the <code>--no-site-packages</code> switch to ensure a completely clean environment.</p>

<p>To create and start a new virtual environment with <code>--no-site-packages</code>, enter:</p>

<pre><code>$ v.mk myvirtualenv
New python executable in myvirtualenv/bin/python
Installing setuptools............done.
(myvirtualenv) $
</code></pre>

<p>This creates and virtual environment and makes it active.  To deactivate it, you can simply type:</p>

<pre><code>(myvirtualenv) $ deactivate
$
</code></pre>

<p>So let's go ahead and start our virtual environment once again and install some packages to it.</p>

<pre><code>$ v myvirtualenv
(myvirtualenv) $
</code></pre>

<p>We're going to install Python package <code>Yolk</code> as it is a useful command line utility that lists the packages installed for the environment.</p>

<pre><code>$ v myvirtualenv
(myvirtualenv) $
(myvirtualenv) $ pip install yolk
Downloading/unpacking yolk
  Downloading yolk-0.4.1.tar.gz (80Kb): 80Kb downloaded
  Running setup.py egg_info for package yolk

Requirement already satisfied (use --upgrade to upgrade): setuptools in /Users/jonathan/.virtualenvs/myvirtualenv/lib/python2.7/site-packages/setuptools-0.6c11-py2.7.egg (from yolk)
Installing collected packages: yolk
  Running setup.py install for yolk

    Installing yolk script to /Users/jonathan/.virtualenvs/myvirtualenv/bin
Successfully installed yolk
Cleaning up...
</code></pre>

<p>Now you can use <code>yolk -l</code> to list the packages installed for this virtual environment:</p>

<pre><code>(myvirtualenv) $ yolk -l
Python          - 2.7.1        - active development (/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload)
pip             - 0.8.1        - active
setuptools      - 0.6c11       - active
wsgiref         - 0.1.2        - active development (/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7)
yolk            - 0.4.1        - active
</code></pre>

<p>Here is a brief one-line example showing how to create a virtualenv and install Django, MySQL Python, South, Python Imaging Library (PIL), and ImageKit using pip:</p>

<pre><code>$ v.mk newdjangoenv
(newdjangoenv) $ pip install django MySQL-python south pil django-imagekit
</code></pre>

<p>When you have your requirements installed, it's always good to take a snapshot of the requirements and the current versions.  You can do this by typing <code>freeze</code> and specifying an output file:</p>

<pre><code>(newdjangoenv) $ pip freeze &gt; requirements.txt
</code></pre>

<p>And finally, you can use the <code>requirements.txt</code> file so that your environment is completely and easily replicable:</p>

<pre><code>$ pip install -r requirements.txt
</code></pre>

<p>And there you have it -- you can now create and test your Python applications in completely isolated environments!</p>

<p>For more on pip and virtualenv, check out this great post by <a href="http://www.saltycrane.com/blog/2009/05/notes-using-pip-and-virtualenv-django/">Salty Crane</a> which got me started on all this.</p>
        </div>
        <div class="post-date">
            <span>-- Feb 09, 2011</span>
        </div>
    </div>
</section>
        </div>

    </div>
    <footer>
    </footer>

    <!-- javascripts -->
    <script type="text/javascript" async="" src="./Virtualenv and pip Basics   Jontourage_files/ga.js"></script><script src="./Virtualenv and pip Basics   Jontourage_files/jquery.min.js" type="text/javascript"></script>
    <script src="http://jontourage.com/js/jquery.easing.1.3.js"></script>
	<script src="./Virtualenv and pip Basics   Jontourage_files/less-1.1.5.min.js"></script>
	<script src="./Virtualenv and pip Basics   Jontourage_files/bootstrap-tabs.js" type="text/javascript"></script>
	<script src="./Virtualenv and pip Basics   Jontourage_files/bootstrap-twipsy.js" type="text/javascript"></script>
	<script src="./Virtualenv and pip Basics   Jontourage_files/bootstrap-alerts.js" type="text/javascript"></script>
	<script src="./Virtualenv and pip Basics   Jontourage_files/global.js" type="text/javascript"></script>
    <script type="text/javascript">
        var App = App || {};
    </script>
    <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-20692289-1']);
        _gaq.push(['_trackPageview']);

        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    <!-- /javascripts -->

<div id="shadowMeasureIt"></div><div id="divCoordMeasureIt"></div><div id="divRectangleMeasureIt"><div id="divRectangleBGMeasureIt"></div></div></body><span id="skype_highlighting_settings" display="none" autoextractnumbers="1"></span><object id="skype_plugin_object" location.href="http://jontourage.com/2011/02/09/virtualenv-pip-basics/" location.hostname="jontourage.com" style="position: absolute; visibility: hidden; left: -100px; top: -100px; " width="0" height="0" type="application/x-vnd.skype.click2call.chrome.5.6.0"></object></html>